#!/bin/bash

# script variables
NOMP_SOURCE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
NOMP_DEFAULT_PROMPT=""
NOMP_LNSTATE_PATH="${NOMP_SOURCE_DIR}/.lnstate"
NOMP_SHELL_CONFIG_FILE=""

# colors
red=$(tput setaf 1)
green=$(tput setaf 2)
cyan=$(tput setaf 6)
reset=$(tput sgr0)

# read state variables of lncfg
if [[ -f "${NOMP_LNSTATE_PATH}" ]]; then
  source "${NOMP_LNSTATE_PATH}"
else
  echo "${red}You should run ./lncfg before running ./${0}${reset}"
  exit 1
fi
NOMP_BIN_PATH="${NOMP_INSTALL_DIR}/bin"

# check the shell config file
if [[ -f ~/.bashrc ]]; then
  NOMP_SHELL_CONFIG_FILE="${HOME}/.bashrc"
elif [[ -f ~/.zshrc ]]; then
  NOMP_SHELL_CONFIG_FILE="${HOME}/.zshrc"
fi

function update_bashrc() {
  [[ -n ${NOMP_SHELL_CONFIG_FILE} ]] &&
    echo -e "${NOMP_ENVIRONMENT}" >>"${NOMP_SHELL_CONFIG_FILE}" &&
    echo "${green}Successfully exported variables to" \
      "${NOMP_SHELL_CONFIG_FILE}${reset}."
  exit 0
}

function print_help() {
  echo -e " NAME\n\t Make utility tools for libnomp.\n\n" \
    "SYNOPSIS\n" \
    "\t lnrun <command> [options]\n\n" \
    "OPTIONS\n" \
    "\t${cyan}-h${reset}, ${cyan}--help${reset}" \
    "\tPrint the usage details of ${0}.\n" \
    "\t${cyan}-y${reset}, ${cyan}--yes${reset}" \
    "\tYes to all prompts.\n" \
    "\t${cyan}-n${reset}, ${cyan}--no${reset}" \
    "\tNo to all prompts.\n\n" \
    "COMMANDS\n" \
    "\t${cyan}i${reset}, ${cyan}install${reset} " \
    "\tInstall libnomp.\n" \
    "\t${cyan}f${reset}, ${cyan}format${reset}" \
    "\tFormat the source files of libnomp."
  exit 0
}

function make_install() {
  NOMP_INSTALL_SUCCESS=false
  cmake --build "${NOMP_BUILD_DIR}" --target install &&
    NOMP_INSTALL_SUCCESS=true

  if [[ ${NOMP_INSTALL_SUCCESS} = true ]]; then
    echo "${green}Successfully installed libnomp${reset}"
    echo "See ${cyan}lnrun -h${reset} or ${cyan}lnrun --help${reset} for " \
      "available commands."

    [[ ${NOMP_DEFAULT_PROMPT} = "n" ]] && exit 0

    # Add nomp install dir to env
    NOMP_ENVIRONMENT=$(
      cat <<-END
# Setup nomp environment variables
export NOMP_INSTALL_DIR=${NOMP_INSTALL_DIR}
# Add lnrun script to path
export PATH=${NOMP_BIN_PATH}:\${PATH}
END
    )

    # set the libnomp env variables if not
    [[ ${NOMP_DEFAULT_PROMPT} = "y" ]] && update_bashrc
    read -p "Do you wish to add libnomp variables to .bashrc? [Y|n]: " -n 1
    echo
    [[ $REPLY =~ ^[Yy]$ ]] && update_bashrc
    exit 0
  else
    echo "${red}Failed to install libnomp${reset}"
    exit 1
  fi
}

function make_format() {
  NOMP_FORMAT_SUCCESS=false
  cmake --build "${NOMP_BUILD_DIR}" --target clangformat &&
    cmake --build "${NOMP_BUILD_DIR}" --target pylint &&
    cmake --build "${NOMP_BUILD_DIR}" --target flake8 &&
    NOMP_FORMAT_SUCCESS=true

  if [[ ${NOMP_FORMAT_SUCCESS} = true ]]; then
    echo "${green}Successfully formatted source files${reset}"
    exit 0
  else
    echo "${red}Failed to format source files${reset}"
    exit 1
  fi
}

if [ $# -eq 0 ]; then
  echo "No arguments were provided to ${cyan}lnmake${reset} script."
  exit 0
fi

# check for default prompt
if [[ $# -gt 0 ]]; then
  case $1 in
  i | install)
    # check for default prompt
    shift
    if [[ $# -gt 0 ]]; then
      case $1 in
      -h | --help) print_help ;;
      -y | --yes) NOMP_DEFAULT_PROMPT="y" ;;
      -n | --no) NOMP_DEFAULT_PROMPT="n" ;;
      *)
        echo "${red}Invalid argument: ${1}${reset}."
        echo "See ${cyan}./${0} -h${reset} or ${cyan}./${0} --help${reset} for" \
          "the accepted commands."
        exit 1
        ;;
      esac
    fi
    make_install
    ;;
  f | format) make_format ;;
  -h | --help) print_help ;;
  *)
    echo "${red}Invalid argument: ${1}${reset}."
    echo "See ${cyan}./${0} -h${reset} or ${cyan}./${0} --help${reset} for" \
      "the accepted commands."
    exit 1
    ;;
  esac
fi

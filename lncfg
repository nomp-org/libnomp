#!/bin/bash

# script variables
NOMP_SOURCE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
NOMP_LNSTATE_PATH="${NOMP_SOURCE_DIR}/.lnstate"

: "${NOMP_INSTALL_DIR:="${HOME}/.nomp"}"
: "${NOMP_OPENCL_LIBRARY:=""}"
: "${NOMP_BUILD_TYPE:="RelWithDebInfo"}"
: "${NOMP_ENABLE_DOCS:="OFF"}"
: "${NOMP_BUILD_DIR:="${NOMP_SOURCE_DIR}/build"}"
: "${NOMP_BUILD_CMAKE_CXX_COMPILER:=""}"
: "${NOMP_SYCL_IMPLEMENTATION:="IntelDPCPP"}"

# colors
red=$(tput setaf 1)
green=$(tput setaf 2)
cyan=$(tput setaf 6)
reset=$(tput sgr0)

function print_help() {
  echo -e "Usage: ${0} [-h|--help] [-v|--verbose] [-d|--debug] [-D|--docs]\n" \
    "\t[-i|--install-dir <install directory>] " \
    "[-B|--build-dir <build directory>\n" \
    "\t[-o|--opencl-lib <opencl library>]\n" \
    "${cyan}-h/--help:${reset} Print help for libnomp configuration script.\n" \
    "${cyan}-b/--build-type:${reset} Specify the build type for cmake " \
    "(Default: ${NOMP_BUILD_TYPE}, Allowed: Debug, Release, RelWithDebInfo " \
    "and MinSizeRel).\n" \
    "${cyan}-d/--enable-docs:${reset} Build with user documentation " \
    "(Default: false).\n" \
    "${cyan}-i/--install-dir:${reset} Specify installation directory for " \
    "libnomp (Default: ${NOMP_INSTALL_DIR}).\n" \
    "${cyan}-B/--build-dir:${reset} Specify build directory for libnomp " \
    "(Default: ${NOMP_BUILD_DIR}).\n" \
    "${cyan}-o/--opencl-lib:${reset} Specify OpenCL library path."
  exit 0
}

# parse the options
while [ $# -gt 0 ]; do
  case $1 in
  -h | --help) print_help ;;
  -b | --build-type) shift && NOMP_BUILD_TYPE=${1^^} ;;
  -d | --enable-docs) NOMP_ENABLE_DOCS="ON" ;;
  -i | --install-dir) shift && NOMP_INSTALL_DIR=$(realpath "${1}") ;;
  -B | --build-dir) shift && NOMP_BUILD_DIR=$(realpath "${1}") ;;
  -o | --opencl-lib) shift && NOMP_OPENCL_LIBRARY=$(realpath "${1}") ;;
  -c | --cxx-compiler) shift && NOMP_BUILD_CMAKE_CXX_COMPILER="${1}" ;;
  -sycl|--sycl-implementation) shift && NOMP_SYCL_IMPLEMENTATION="${1}";;
  *) echo "${red}Invalid argument: ${1}${reset}"
    echo "See ${cyan}./lncfg -h${reset} or ${cyan}./lncfg --help${reset} for " \
      "the accepted commands."
    exit 1 ;;
  esac
  shift
done

# update the cmake opts
NOMP_CMAKE_OPTS=()
NOMP_CMAKE_OPTS+=("-DCMAKE_INSTALL_PREFIX=${NOMP_INSTALL_DIR}")
NOMP_CMAKE_OPTS+=("-DENABLE_DOCS=${NOMP_ENABLE_DOCS}")
NOMP_CMAKE_OPTS+=("-DCMAKE_BUILD_TYPE=${NOMP_BUILD_TYPE}")

[[ -n ${NOMP_OPENCL_LIBRARY} ]] &&
  NOMP_CMAKE_OPTS+=("-DOpenCL_LIBRARY=${NOMP_OPENCL_LIBRARY}")

[[ -n ${NOMP_SYCL_IMPLEMENTATION} ]] &&
  NOMP_CMAKE_OPTS+=("-DSYCL_IMPLEMENTATION=${NOMP_SYCL_IMPLEMENTATION}")

[[ -n ${NOMP_BUILD_CMAKE_CXX_COMPILER} ]] &&
  NOMP_CMAKE_OPTS+=("-D CMAKE_CXX_COMPILER=${NOMP_BUILD_CMAKE_CXX_COMPILER}")

# update lnstate variables
echo -e "NOMP_INSTALL_DIR=${NOMP_INSTALL_DIR}\n" \
  "NOMP_BUILD_DIR=${NOMP_BUILD_DIR}" >"${NOMP_LNSTATE_PATH}"

# create build directory if not exists
[[ ! -d "${NOMP_BUILD_DIR}" ]] && mkdir "${NOMP_BUILD_DIR}"

# configure cmake
NOMP_CONFIGURE_SUCCESS=false
echo "Configuring build files for libnomp..."
cmake -B "${NOMP_BUILD_DIR}" -S "${NOMP_SOURCE_DIR}" "${NOMP_CMAKE_OPTS[@]}" &&
  NOMP_CONFIGURE_SUCCESS=true

if [[ ${NOMP_CONFIGURE_SUCCESS} = true ]]; then
  echo "${green}Successfully created build files for libnomp${reset}"
  echo "To install libnomp, either execute ${cyan}./lninstall${reset} or" \
    "execute the command: ${cyan}cmake --build ${NOMP_BUILD_DIR} --target" \
    "install${reset}."
  exit 0
else
  echo "${red}Failed to create build files for libnomp${reset}."
  exit 1
fi

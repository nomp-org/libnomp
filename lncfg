#!/bin/bash

# Check for nomp environment variables.
: "${NOMP_SOURCE_DIR:="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"}"
: "${NOMP_BUILD_DIR:="${NOMP_SOURCE_DIR}/build"}"
: "${NOMP_INSTALL_DIR:="${HOME}/.nomp"}"
: "${NOMP_PREFIX_PATH:=""}"
: "${NOMP_BUILD_TYPE:="RelWithDebInfo"}"
: "${NOMP_ENABLE_OPENCL:="OFF"}"
: "${NOMP_OPENCL_LIBRARY:=""}"
: "${NOMP_OPENCL_INCLUDE_DIR:=""}"
: "${NOMP_ENABLE_CUDA:="OFF"}"
: "${NOMP_ENABLE_HIP:="OFF"}"
: "${NOMP_ENABLE_DOCS:="OFF"}"
: "${NOMP_ENABLE_ASAN:="OFF"}"
: "${NOMP_C_COMPILER:=""}"
: "${NOMP_CXX_COMPILER:=""}"
: "${NOMP_LNSTATE_PATH:="${NOMP_SOURCE_DIR}/.lnstate"}"

# Terminal output colors.
red=$(tput setaf 1)
green=$(tput setaf 2)
cyan=$(tput setaf 6)
reset=$(tput sgr0)

# Print the options.
function print_help() {
  echo -e "Usage: ${0} [--help] [--cc <c compiler>] [--cxx <cxx compiler>] " \
    "[--build-type <build type>] [--build-dir <build directory>] [--install-prefix <install directory>] " \
    "[--prefix-path <cmake prefix path>] [--enable-hip] [--enable-cuda] [--enable-opencl] " \
    "[--opencl-lib <opencl library path>] [--opencl-headers <opencl header path>] [--enable-docs]\n\n" \
    "${cyan}--help:${reset} Print this help and exit.\n" \
    "${cyan}--cc:${reset} C Compiler.\n" \
    "${cyan}--cxx:${reset} CXX Compiler.\n" \
    "${cyan}--build-type:${reset} Build type (Default: ${NOMP_BUILD_TYPE}, " \
    "Allowed: Debug, Release, RelWithDebInfo and MinSizeRel).\n" \
    "${cyan}--build-dir:${reset} Build directory (Default: ${NOMP_BUILD_DIR}).\n" \
    "${cyan}--install-prefix:${reset} Install directory (Default: ${NOMP_INSTALL_DIR}).\n" \
    "${cyan}--prefix-path:${reset} Semicolon separated list of prefix paths for CMake.\n" \
    "${cyan}--enable-hip:${reset} Build with HIP backend (Default: ${NOMP_ENABLE_HIP}).\n" \
    "${cyan}--enable-cuda:${reset} Build with Cuda backend (Default: ${NOMP_ENABLE_CUDA}).\n" \
    "${cyan}--enable-opencl:${reset} Build with OpenCL backend (Default: ${NOMP_ENABLE_OPENCL}).\n" \
    "${cyan}--opencl-lib:${reset} OpenCL library path.\n" \
    "${cyan}--opencl-headers:${reset} OpenCL header path.\n" \
    "${cyan}--enable-asan:${reset} Build user documentation (Default: ${NOMP_ENABLE_ASAN}).\n" \
    "${cyan}--enable-docs:${reset} Build user documentation (Default: ${NOMP_ENABLE_DOCS})."
  exit 0
}

# Parse the options.
while [ $# -gt 0 ]; do
  case $1 in
  --help) print_help ;;
  --cc) shift && NOMP_C_COMPILER="${1}" ;;
  --cxx) shift && NOMP_CXX_COMPILER="${1}" ;;
  --build-type) shift && NOMP_BUILD_TYPE=${1} ;;
  --build-dir) shift && NOMP_BUILD_DIR=$(realpath "${1}") ;;
  --install-prefix) shift && NOMP_INSTALL_DIR=$(realpath "${1}") ;;
  --prefix-path) shift && NOMP_PREFIX_PATH="${1}" ;;
  --enable-hip) NOMP_ENABLE_HIP="ON" ;;
  --enable-cuda) NOMP_ENABLE_CUDA="ON" ;;
  --enable-opencl) NOMP_ENABLE_OPENCL="ON" ;;
  --opencl-lib) shift && NOMP_OPENCL_LIBRARY=$(realpath "${1}") ;;
  --opencl-headers) shift && NOMP_OPENCL_INCLUDE_DIR=$(realpath "${1}") ;;
  --enable-asan) NOMP_ENABLE_ASAN="ON" ;;
  --enable-docs) NOMP_ENABLE_DOCS="ON" ;;
  *) echo "${red}Invalid option: ${1}${reset}."
    echo "See ${cyan}./lncfg -h${reset} or ${cyan}./lncfg --help${reset} for " \
      "the accepted options."
    exit 1 ;;
  esac
  shift
done

# Update the cmake options.
NOMP_CMAKE_OPTS=()

[[ -n ${NOMP_C_COMPILER} ]] &&
  NOMP_CMAKE_OPTS+=("-D CMAKE_C_COMPILER=${NOMP_C_COMPILER}")
[[ -n ${NOMP_CXX_COMPILER} ]] &&
  NOMP_CMAKE_OPTS+=("-D CMAKE_CXX_COMPILER=${NOMP_CXX_COMPILER}")

NOMP_CMAKE_OPTS+=("-DCMAKE_BUILD_TYPE=${NOMP_BUILD_TYPE}")
NOMP_CMAKE_OPTS+=("-DCMAKE_INSTALL_PREFIX=${NOMP_INSTALL_DIR}")
[[ -n ${NOMP_PREFIX_PATH} ]] &&
  NOMP_CMAKE_OPTS+=("-DCMAKE_PREFIX_PATH=${NOMP_PREFIX_PATH}")

NOMP_CMAKE_OPTS+=("-DENABLE_HIP=${NOMP_ENABLE_HIP}")
NOMP_CMAKE_OPTS+=("-DENABLE_CUDA=${NOMP_ENABLE_CUDA}")
NOMP_CMAKE_OPTS+=("-DENABLE_OPENCL=${NOMP_ENABLE_OPENCL}")
[[ -n ${NOMP_OPENCL_LIBRARY} ]] &&
  NOMP_CMAKE_OPTS+=("-DOpenCL_LIBRARY=${NOMP_OPENCL_LIBRARY}")
[[ -n ${NOMP_OPENCL_INCLUDE_DIR} ]] &&
  NOMP_CMAKE_OPTS+=("-DOpenCL_INCLUDE_DIR=${NOMP_OPENCL_INCLUDE_DIR}")
NOMP_CMAKE_OPTS+=("-DENABLE_ASAN=${NOMP_ENABLE_ASAN}")
NOMP_CMAKE_OPTS+=("-DENABLE_DOCS=${NOMP_ENABLE_DOCS}")

# Update variables for lnstate scripts.
echo -e "NOMP_INSTALL_DIR=${NOMP_INSTALL_DIR}\n" \
  "NOMP_BUILD_DIR=${NOMP_BUILD_DIR}" >"${NOMP_LNSTATE_PATH}"

# Create build directory if it doesn't exist.
[[ ! -d "${NOMP_BUILD_DIR}" ]] && mkdir "${NOMP_BUILD_DIR}"

# Configure cmake build.
echo "Configuring build files for libnomp..."
cmake -B "${NOMP_BUILD_DIR}" -S "${NOMP_SOURCE_DIR}" "${NOMP_CMAKE_OPTS[@]}"

if [[ $? -eq 0 ]]; then
  echo "${green}Successfully created build files for libnomp${reset}."
  echo "To install libnomp, either execute ${cyan}./lnbuild${reset} or" \
    "execute the command: ${cyan}cmake --build ${NOMP_BUILD_DIR} --target" \
    "install${reset}."
  exit 0
else
  echo "${red}Failed to create build files for libnomp${reset}."
  exit 1
fi

#!/bin/bash

# script variables
: "${NOMP_INSTALL_DIR:="${HOME}/.nomp"}"
: "${NOMP_OPENCL_LIBRARY:="/lib/x86_64-linux-gnu/libOpenCL.so.1"}"
: "${NOMP_BUILD_TYPE:=""}"
: "${NOMP_ENABLE_DOCS:=false}"

NOMP_SOURCE_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
NOMP_BUILD_DIR="${NOMP_SOURCE_DIR}/build"
NOMP_LNSTATE_PATH="${NOMP_SOURCE_DIR}/.lnstate"

# colors
red=$(tput setaf 1)
green=$(tput setaf 2)
cyan=$(tput setaf 6)
reset=$(tput sgr0)

function print_help() {
  echo -e "usage: ./lncfg [-h|--help] [-v|--verbose] [-d|--debug] [-D|--docs]\n" \
    "\t[-i|--install-dir <install directory>]\n\n" \
    "${cyan}-h/--help:${reset} Print help for libnomp configuration.\n" \
    "${cyan}-b/--build-type:${reset} Specify the build type for cmake." \
    "Accepted values: Debug, Release, RelWithDebInfo and MinSizeRel.\n" \
    "${cyan}-d/--enable-docs:${reset} Build with user documentation (Default: false).\n" \
    "${cyan}-i/--install-dir:${reset} Specify installation directory for libnomp (Default: ${NOMP_INSTALL_DIR}).\n" \
    "${cyan}-o/--opencl-lib:${reset} Specify OpenCL library path (Default: ${NOMP_OPENCL_LIBRARY}).\n"
}

function update_variable() {
  grep -xFq "${1}=${2}" "${NOMP_LNSTATE_PATH}" || {
    grep -wq "${1}=" "${NOMP_LNSTATE_PATH}" &&
      sed -i "s+${1}=.*+${1}=${2}+" "${NOMP_LNSTATE_PATH}" ||
      echo -e "${1}=${2}" >>"${NOMP_LNSTATE_PATH}"
  }
}

# create build directory if not exists
[[ ! -d "${NOMP_BUILD_DIR}" ]] && mkdir build

# parse the options
while [ $# -gt 0 ]; do
  case $1 in
  -h | --help)
    print_help
    exit 0
    ;;
  -b | --build-type) shift && NOMP_BUILD_TYPE=${1^^} ;;
  -d | --enable-docs) NOMP_ENABLE_DOCS=true ;;
  -i | --install-dir) shift && NOMP_INSTALL_DIR="${1}" ;;
  -o | --opencl-lib) shift && NOMP_OPENCL_LIBRARY="${1}" ;;
  *) echo "${red}Invalid argument: ${1}${reset}" &&
    echo "See ${cyan}./lncfg -h${reset} or ${cyan}./lncfg --help${reset} for the accepted commands" &&
    exit 1 ;;
  esac
  shift
done

# update the cmake opts
NOMP_CMAKE_OPTS=()
NOMP_CMAKE_OPTS+=("-DOpenCL_LIBRARY=${NOMP_OPENCL_LIBRARY}")
NOMP_CMAKE_OPTS+=("-DCMAKE_INSTALL_PREFIX=${NOMP_INSTALL_DIR}")
[[ ${NOMP_ENABLE_DOCS} = true ]] &&
  NOMP_CMAKE_OPTS+=("-DENABLE_DOCS=ON")
[[ -n ${NOMP_BUILD_TYPE} ]] &&
  NOMP_CMAKE_OPTS+=("-DCMAKE_BUILD_TYPE=${NOMP_BUILD_TYPE}")

# update lnstate variables
update_variable "NOMP_SOURCE_DIR" "${NOMP_SOURCE_DIR}"
update_variable "NOMP_INSTALL_DIR" "${NOMP_INSTALL_DIR}"

# configure cmake
NOMP_CONFIGURE_SUCCESS=false
echo "Configuring build files for libnomp..."
cd "${NOMP_BUILD_DIR}" &&
  cmake "${NOMP_SOURCE_DIR}" "${NOMP_CMAKE_OPTS[@]}" &&
  NOMP_CONFIGURE_SUCCESS=true

if [[ ${NOMP_CONFIGURE_SUCCESS} = true ]]; then
  echo "${green}Successfully created build files for libnomp${reset}"
  echo "To install libnomp, execute '${cyan}. lninstall${reset}'"
  exit 0
else
  echo "${red}Failed to create build files for libnomp${reset}"
  exit 1
fi

name: Lint checks
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false
env:
  # Increase to reset cache manually
  CACHE_NUMBER: 0
  LIBNOMP_ENV: /usr/share/miniconda/envs/libnomp-dev
  INSTALLDIR: install
jobs:
  lint-check:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Setup GitHub actions
        uses: actions/checkout@v3
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3.13
        if: ${{ inputs.debug_enabled }}
      - name: Setup conda environment
        id: setup_conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: libnomp-dev
          use-mamba: false
      - name: Cache conda environment
        uses: actions/cache@v3
        with:
          path: ${{ env.LIBNOMP_ENV }}
          key:  conda-${{ runner.os }}-${{ hashFiles('environment-dev.yml') }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('requirements-dev.txt') }}-${{ env.CACHE_NUMBER }}
        id: cache
      - name: Update conda environment
        id: update_env
        run: |
          conda env update -n libnomp-dev -f environment-dev.yml
        if: steps.cache.outputs.cache-hit != 'true'
      - name: Run clang-format check
        run: |
          ./lncfg --install-prefix ${INSTALLDIR} --prefix-path ${CONDA_PREFIX}
          ./lnbuild --format-check yes --install no --update no
      - name: Run clang-tidy check
        run: |
          ./lncfg --install-prefix ${INSTALLDIR} --prefix-path ${CONDA_PREFIX}
          # FIXME: Skipping the clang-tidy checks for now.
          # ./lnbuild --tidy yes --install no --update no
      - name: Run pylint check
        run: |
          ./lncfg --install-prefix ${INSTALLDIR} --prefix-path ${CONDA_PREFIX}
          # FIXME: Skipping the pylint checks for now.
          # ./lnbuild --pylint yes --install no --update no
      - name: Run black check
        run: |
          ./lncfg --install-prefix ${INSTALLDIR} --prefix-path ${CONDA_PREFIX}
          ./lnbuild --black-check yes  --install no --update no
      - name: Run isort check
        run: |
          ./lncfg --install-prefix ${INSTALLDIR} --prefix-path ${CONDA_PREFIX}
          ./lnbuild --isort-check yes  --install no --update no
      - name: Run flake8 check
        run: |
          ./lncfg --install-prefix ${INSTALLDIR} --prefix-path ${CONDA_PREFIX}
          ./lnbuild --flake8 yes  --install no --update no
